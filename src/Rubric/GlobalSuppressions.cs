// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly:
  SuppressMessage("Security", "CA5394:Do not use insecure randomness", Justification = "Non-secure applications only",
                  Scope = "member",
                  Target =
                    "~M:Rubric.Engines.Probabilistic.ProbabilisiticEngineExtensions.ApplyAsyncPreRule``1(Rubric.Engines.Probabilistic.Default.BaseProbabilisticRuleEngine,Rubric.IEngineContext,Rubric.Rules.Probabilistic.Async.IRule{``0},``0,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "Closed in continuations", Scope = "member", Target = "~M:Rubric.Engines.Async.Implementation.RuleEngine`1.Parallelize(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Async.IRule{`0}},`0,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "Closed in continuations", Scope = "member", Target = "~M:Rubric.Engines.Probabilistic.Async.Implementation.RuleEngine`2.ParallelizePre(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Probabilistic.Async.IRule{`0}},`0,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Async.Implementation.RuleEngine`2.Parallelize(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Async.IRule{`0,`1}},`0,`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Async.Implementation.RuleEngine`2.ParallelizeInputs(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{`0},`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Async.Implementation.RuleEngine`2.ParallelizePost(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Async.IRule{`1}},`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Async.Implementation.RuleEngine`2.ParallelizePre(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Async.IRule{`0}},`0,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Probabilistic.Async.Implementation.RuleEngine`1.Parallelize(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Probabilistic.Async.IRule{`0}},`0,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Probabilistic.Async.Implementation.RuleEngine`2.Parallelize(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Probabilistic.Async.IRule{`0,`1}},`0,`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Probabilistic.Async.Implementation.RuleEngine`2.ParallelizeInputs(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{`0},`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Reliability", "CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:Rubric.Engines.Probabilistic.Async.Implementation.RuleEngine`2.ParallelizePost(Rubric.IEngineContext,System.Collections.Generic.IEnumerable{Rubric.Rules.Probabilistic.Async.IRule{`1}},`1,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
