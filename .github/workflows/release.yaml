name: Release

on:
  push:
    tags: ["[0-9].[0-9].[0-9]"]
jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
     run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Set version
      run: |
        dotnet tool install -g dotnet-setversion
        dotnet tool install -g dotnet-reportgenerator-globaltool
        setversion --recursive ${{github.ref_name}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" --settings Tests/testsettings.xml --results-directory ./TestResults
    - name: Test Results
      uses: NasAmin/trx-parser@v0.2.0
      id: trx-parser
      with:
        TRX_PATH: ${{ github.workspace }}/src/TestResults
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'src/TestResults/**/coverage.cobertura.xml'
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        indicators: true
        output: both
        thresholds: '95 95'
        badge: true
    - name: Generate Detailed HTML Coverage Report
      run: reportgenerator -reportTypes:HtmlInline "-reports:TestResults/*/coverage.cobertura.xml" "-targetdir:htmlreport"
    - name: Archive code coverage summary
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-summary
        path: 'code-coverage-results.md'
    - name: Archive code coverage details
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-details
        path: 'src/htmlreport'
    - name: Package
      run: dotnet pack --configuration Release --no-build --output .
    - name: Publish package to github
      run: dotnet nuget push -s "https://nuget.pkg.github.com/ericvprice/index.json" -k $LOCAL_NUGET_KEY *.nupkg
      env:
        LOCAL_NUGET_KEY: ${{ secrets.LOCAL_NUGET_KEY }}
    - name: Push to nuget.org
<<<<<<< HEAD
      run: dotnet nuget push -s "https://api.nuget.org/v3/index.json" -k $NUGET_KEY *.nupkg
=======
      run: dotnet nuget push -s https://api.nuget.org/v3/index.json" -k $NUGET_KEY *.nupkg"
>>>>>>> master
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}