name: Deploy

on:
  push:
    branches: [ "release/**" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
     run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Set version
      run: |
        dotnet tool install -g dotnet-setversion
        setversion ${GITHUB_REF##*/}-beta-${{github.run_number}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat code coverage" --settings Tests/testsettings.xml /p:Threshold=95
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Package
      run: dotnet pack --configuration Release --no-build --output .
    name: Build

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
     run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat code coverage" --settings Tests/testsettings.xml
    - name: Generate Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: '**/coverage.cobertura.xml'
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        indicators: true
        output: both
        thresholds: '95 95'
        badge: true
    - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: '*.md'
    - name: Create Release Tag
        - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${GITHUB_REF##*/}-beta-${{github.run_number}}
    - name: Publish package to github
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.repository_owner }} --password ${{ github.token }} --store-password-in-clear-text
        dotnet nuget push *.nupkg --source github
    # - name: Push to nuget.org
    #   run: dotnet nuget push "*.nupkg" --api-key ${{secrets.nuget_key}} --source https://api.nuget.org/v3/index.json